# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PIPENV_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pipenv"


stages:
  - test
  - build_check
  - deploy

cache:
  paths:
    - .cache/pip
    - .cache/pipenv

before_script:
  - python --version  # For debugging
  - pip install pipenv
  - pipenv install --dev --skip-lock --python=$(which python) # no --deploy, this is a library

.run_tests:
  stage: test
  script:
    - pipenv run pytest --cov=src/ --cov-report=xml --cov-report=term
    - pipenv run flake8
  coverage: '/TOTAL.*\s([.\d]+)%/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

test_3.6:
 extends: .run_tests
 image: python:3.6

test_3.7:
  extends: .run_tests
  image: python:3.7

test_3.8:
  extends: .run_tests
  image: python:3.8

test_3.9:
  extends: .run_tests
  image: python:3.9

test_3.10:
  extends: .run_tests
  image: python:3.10

test_3.11:
  extends: .run_tests
  image: python:3.11

build_check:
  image: python:3.10
  stage: build_check
  script:
    - pip install build
    - python -m build

deploy:
  image: python:3.10
  stage: deploy
  only:
    - tags
  variables:
    TWINE_USERNAME: $TWINE_USERNAME
    TWINE_PASSWORD: $TWINE_PASSWORD
  script:
    - pip install twine build
    - python -m build
    - python -m twine upload -u "$TWINE_USERNAME" -p "$TWINE_PASSWORD" --verbose dist/*